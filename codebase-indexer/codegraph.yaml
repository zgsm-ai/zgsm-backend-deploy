log_dir: "/app/logs/index"
retention_days: 7
languages:
  - name: typescript
    detection_files: ["tsconfig.json"]
    index:
      name: scip-typescript
      commands:
        - base: "node"
          args:
            - "--max-old-space-size=16000"
            - "/usr/bin/scip-typescript"
            - "index"
            - "--cwd"
            - "__sourcePath__"
            - "--output"
            - "__outputPath__/index.scip"
            - "--infer-tsconfig"
          env:
            - "key=value"
    
  - name: javascript
    detection_files: ["package.json"]
    index:
      name: scip-typescript
      commands:
        - base: "node"
          args:
            - "--max-old-space-size=16000"
            - "/usr/bin/scip-typescript"
            - "index"
            - "--cwd"
            - "__sourcePath__"
            - "--output"
            - "__outputPath__/index.scip"
            - "--infer-tsconfig"
    
  - name: go
    detection_files: ["go.mod", "go.work"]
    index:
      name: scip-go
      commands:
        - base: "scip-go"
          args:
            - "--output"
            - "__outputPath__/index.scip"
            - "-v"
    
  - name: java
    detection_files: ["pom.xml", "build.gradle"]
    build_tools:
      - name: maven
        detection_files: ["pom.xml"]
        priority: 10
        build_commands:
          - base: "mvn"
            args: ["verify", "--batch-mode", "--fail-never", "-DskipTests", "-T", "8"]
    index:
      name: scip-java
      commands:
        - base: "scip-java"
          args:
            - "index"
            - "--cwd"
            - "__sourcePath__"
            - "--targetroot"
            - "__outputPath__/build"
            - "--output"
            - "__outputPath__/index.scip"
            - "--"
            - "__buildArgs__"
    
  - name: python
    detection_files: ["pyproject.toml", "requirements.txt", "setup.py", "Pipfile", "poetry.lock", "environment.yml"]
    build_tools:
      - name: poetry
        detection_files: ["poetry.lock", "pyproject.toml"]
        priority: 10
        build_commands: []
      - name: pipenv
        detection_files: ["Pipfile"]
        priority: 20
        build_commands: []
      - name: pip
        detection_files: ["requirements.txt"]
        priority: 30
        build_commands: []
    index:
      name: scip-python
      commands:
        - base: "node"
          args:
            - "--max-old-space-size=16000"
            - "/usr/bin/scip-python"
            - "index"
            - "--output"
            - "__outputPath__/index.scip"
            - "--cwd"
            - "__sourcePath__"
            - "--project-version"
            - "1"
    
  - name: ruby
    detection_files: ["Gemfile"]
    index:
      name: scip-ruby
      commands:
        - base: "scip-ruby"
          args:
            - "--dir"
            - "__sourcePath__"
            - "--max-threads"
            - "32"
            - "--index-file"
            - "__outputPath__/index.scip"
            - "--gem-metadata"
            - "ruby@v0.0.1"
    
  - name: c
    detection_files: ["CMakeLists.txt", "configure", "Configure", "Makefile"]
    build_tools:
      - name: cmake
        detection_files: ["CMakeLists.txt"]
        priority: 10
        build_commands:
          - base: "cmake"
            args:
              - "-B"
              - "build"
              - "-DCMAKE_EXPORT_COMPILE_COMMANDS=ON"
              - "-S"
              - "__sourcePath__"
              - "-B"
              - "__outputPath__/build/"
      - name: make
        detection_files: ["Makefile"]
        priority: 20
        build_commands:
          - base: "bear"
            args:
              - "--output"
              - "__outputPath__/build/compile_commands.json"
              - "--"
              - "make"
              - "-C"
              - "__sourcePath__"
              - "-j"
              - "$(nproc)"
      - name: autoconf
        detection_files: ["configure", "Configure"]
        priority: 30
        build_commands:
          - base: "bash"
            args:
              - "-c"
              - "./configure || ./Configure && bear --output __outputPath__/build/compile_commands.json -- make -C __sourcePath__ -j $(nproc)"
    index:
      name: scip-clang
      commands:
        - base: "scip-clang"
          args:
            - "--compdb-path"
            - "__outputPath__/build/compile_commands.json"
            - "--index-output-path"
            - "__outputPath__/index.scip"
            - "-j"
            - "$(nproc)"
    
  - name: cpp
    detection_files: ["CMakeLists.txt", "configure", "Configure", "Makefile"]
    build_tools:
      - name: cmake
        detection_files: ["CMakeLists.txt"]
        priority: 10
        build_commands:
          - base: "cmake"
            args:
              - "-B"
              - "build"
              - "-DCMAKE_EXPORT_COMPILE_COMMANDS=ON"
              - "-S"
              - "__sourcePath__"
              - "-B"
              - "__outputPath__/build/"
      - name: make
        detection_files: ["Makefile"]
        priority: 20
        build_commands:
          - base: "bear"
            args:
              - "--output"
              - "__outputPath__/build/compile_commands.json"
              - "--"
              - "make"
              - "-C"
              - "__sourcePath__"
              - "-j"
              - "$(nproc)"
      - name: autoconf
        detection_files: ["configure", "Configure"]
        priority: 30
        build_commands:
          - base: "bash"
            args:
              - "-c"
              - "./configure || ./Configure && bear --output __outputPath__/build/compile_commands.json -- make -C __sourcePath__ -j $(nproc)"
    index:
      name: scip-clang
      commands:
        - base: "scip-clang"
          args:
            - "--compdb-path"
            - "__outputPath__/build/compile_commands.json"
            - "--index-output-path"
            - "__outputPath__/index.scip"
            - "-j"
            - "$(nproc)"
    
  - name: rust
    detection_files: ["Cargo.toml"]
    index:
      name: scip-rust
      commands:
        - base: "rust-analyzer"
          args:
            - "scip"
            - "__sourcePath__"
            - "--output"
            - "__outputPath__/index.scip"
          env:
            - "CARGO_NET_OFFLINE=true"
            - "NUM_JOBS=32"
            - "CARGO_BUILD_JOBS=32"
            - "RUSTUP_AUTO_INSTALL=0"
            - "RUSTUP_TOOLCHAIN=stable-x86_64-unknown-linux-gnu"