global:
  storageClass: ""
  imageRegistry: ""
  imagePullPolicy: "IfNotPresent"
  timezone: ""

auth:
  postgresql:
    host: shenma-postgresql-primary
    port: 5432
    username: shenma
    password: sf2025~SHENMA
    databases:
      - oneapi
      - dex
  elasticsearch:
    host: shenma-es-elasticsearch
    port: 9200
    username: elastic
    password: sf2025~SHENMA

oneapi:
  enabled: true
  replicas: 1
  image:
    repository: "justsong/one-api"
    tag: "latest"
  service:
    type: NodePort
    nodePort: 30000
  resources:
    requests:
      cpu: 4
      memory: 8Gi
    limits:
      cpu: 1
      memory: 4Gi
  auth:
    sessionSecret: "zgsm-one-api-secert-9527"
    rootToken: "92fb7a5bd85b49e5bf433bb42ede38c0"
    accessToken: "fe31769003924b0fb3e8c8cde9cf4f53"
  config:
    sql_max_idle_conns: 10
    sql_max_open_conns: 100
    sql_conn_max_lifetime: 30
    db_host: shenma-postgresql-primary
    db_port: 5432
    redis_conn_string: "redis://shenma-redis-master:6379/0"
    global_api_rate_limit: 180
    global_web_rate_limit: 180
    relay_timeout: 180
    sync_frequency: 60
    memory_cache_enabled: false
    channel_update_frequency: 1440
    channel_test_frequency: 1440
    polling_interval: 30
    batch_update_enabled: false
    batch_update_interval: 5
    gemini_version: "v1"
    theme: "default"
    enable_metric: false
    metric_queue_size: 10
    metric_success_rate_threshold: 0.8    

dex:
  enabled: true
  replicas: 1
  image:
    repository: dexidp/dex
    tag: v2.42.1
  service:
    type: NodePort
    port: 5556
    nodePort: 5556
  config:
    expiry:
      idTokens: "720h"
    issuer: "http://<your domain>:5556/dex"
    staticClient:
      id: "1449280978"
      redirectURI: https://<your domain>/login/oidc
      secret: "49a2e85e8fbe81ce5bf768889c8e2a9b"
  # SANGFOE->EXAMPLE
  connectors:
    redirectURI: "http://<your domain>:5556/dex/callback"
    tokenURL: https://<your oauth prodiver>/oauth2/token
    authorizationURL: https://<your oauth prodiver>/oauth2/authorize
    userInfoURL: https://<your oauth prodiver>/oauth2/get_user_info
    logoutURL: https://<your oauth prodiver>/oauth2/user_logout
    clientID: "1449280978"
    clientSecret: "49a2e85e8fbe81ce5bf768889c8e2a9b"
  database:
    name: "dex"
    host: "shenma-postgresql-primary"
    port: 5432
    useExistingSecret: true
    passwordSecretName: "shenma-postgres-auth"
    passwordSecretKey: "password"
  resources:
    limits:
      cpu: "2"
      memory: "4Gi"
    requests:
      cpu: "1"
      memory: "1Gi"

fauxpilot:
  enabled: true
  replicas: 1
  image:
    repository: zgsm/copilot_proxy
    tag: "1.5.16"
  service:
    type: ClusterIP
  resources:
    limits:
      cpu: "4"
      memory: "8Gi"
    requests:
      cpu: "2"
      memory: "4Gi"   
  env:
    THRESHOLD_SCORE: "0.3"
    STR_PATTERN: "import +.*|from +.*|from +.* import *.*"
    USER_CODE_UPLOAD_DELAY: "30"
    MAX_MODEL_COST_TIME: "3000"
    CONTEXT_LINES_LIMIT: "1000"
    SNIPPET_TOP_N: "0"
    MAX_MODEL_LEN: "4000,2000"
    MAX_TOKENS: "500"
    MULTI_LINE_STREAM_K: "6"
    OPENAI_MODEL_HOST: http://shenma-oneapi:3000/v1/completions
    OPENAI_MODEL: DeepSeek-Coder-V2-Lite-Base
    OPENAI_MODEL_API_KEY: "sk-BoM7kCoHnQD5Brg217Ae7eC1A9714e289e0c503f1611C1Bf"
    TZ: ""
    ENABLE_REDIS: False
    REDIS_HOST: shenma-redis-master
    REDIS_PORT: 6379
    REDIS_DB: 0
    REDIS_PWD: ""
    MAIN_MODEL_TYPE: openai


postgresql:
  auth:
    existingSecret: shenma-postgresql
    database: "shenma"
  architecture: replication
  primary:
    initdb:
      scriptsConfigMap: shenma-postgresql-initdb-scripts
    extraEnvVars:
      - name: POSTGRESQL_MAX_CONNECTIONS
        value: "1000"
    livenessProbe:
      enabled: true
      initialDelaySeconds: 30
      periodSeconds: 10
      timeoutSeconds: 30
      successThreshold: 1
      failureThreshold: 5
    readinessProbe:
      enabled: true
      initialDelaySeconds: 30
      periodSeconds: 10
      timeoutSeconds: 30
      successThreshold: 1
      failureThreshold: 5
    resources:
      limits:
        cpu: 4
        memory: 8Gi
      requests:
        cpu: 2
        memory: 4Gi
    service:
      type: NodePort
    persistence:
      enabled: true
      storageClass: ""
      size: 100Gi
  readReplicas:
    replicaCount: 1
    extraEnvVars:
      - name: TZ
        value: ""
      - name: POSTGRESQL_MAX_CONNECTIONS
        value: "1000"
    livenessProbe:
      enabled: true
      initialDelaySeconds: 30
      periodSeconds: 10
      timeoutSeconds: 30
      successThreshold: 1
      failureThreshold: 5
    readinessProbe:
      enabled: true
      initialDelaySeconds: 30
      periodSeconds: 10
      timeoutSeconds: 30
      successThreshold: 1
      failureThreshold: 5
    resources:
      limits:
        cpu: 4
        memory: 8Gi
      requests:
        cpu: 2
        memory: 4Gi
    service:
      type: NodePort
    persistence:
      enabled: true
      storageClass: ""
      size: 100Gi
  backup:
    enabled: true
    cronjob:
      timeZone: ""
      schedule: "0 0 * * *"
      successfulJobsHistoryLimit: 1
      storage:
        enabled: true
        size: 50Gi
        storageClass: "sf-eds-501"
  volumePermissions:
    enabled: true
  metrics:
    enabled: true
    serviceMonitor:
      enabled: true

redis:
  architecture: standalone # replication
  auth:
    enabled: false
    sentinel: false
  master:
    count: 1
    livenessProbe:
      enabled: true
      initialDelaySeconds: 60
      periodSeconds: 30
      timeoutSeconds: 10
      successThreshold: 1
      failureThreshold: 5 
    readinessProbe:
      enabled: true
      initialDelaySeconds: 60
      periodSeconds: 30
      timeoutSeconds: 10
      successThreshold: 1
      failureThreshold: 5
    persistence:
      enabled: true
      storageClass: ""
      size: 10Gi
    volumePermissions:
      enabled: true
    resources:
      requests:
        cpu: 1
        memory: 2Gi
      limits:
        cpu: 2
        memory: 4Gi
    extraEnvVars:
    - name: TZ
      value: ""
  metrics:
    enabled: true
    serviceMonitor:
      enabled: true

elasticsearch:
  pvc:
    size: 50Gi
    storageClassName: open-local-lvm
  service:
    type: NodePort
  security:
    existingSecret: "shenma-es"
  extraVolumes:
    - name: snapshot-repository
      persistentVolumeClaim:
        claimName: elasticsearch-snapshot-repository
  extraVolumeMounts:
    - name: snapshot-repository
      mountPath: /snapshots
  snapshotRepoPath: "/snapshots"
  extraEnvVars:
    - name: TZ
      value: ""
  master:
    masterOnly: true
    replicaCount: 1
    heapSize: 128m
    livenessProbe:
      enabled: true
      initialDelaySeconds: 60
      periodSeconds: 30
      timeoutSeconds: 10
      successThreshold: 1
      failureThreshold: 5
    readinessProbe:
      enabled: true
      initialDelaySeconds: 60
      periodSeconds: 30
      timeoutSeconds: 10
      successThreshold: 1
      failureThreshold: 5
    persistence:
      enabled: true
      storageClass: ""
      size: 20Gi
    resources:
      requests:
        cpu: 1
        memory: 2Gi
      limits:
        cpu: 2
        memory: 4Gi
  data:
    replicaCount: 1
    heapSize: 2048m
    livenessProbe:
      enabled: true
      initialDelaySeconds: 60
      periodSeconds: 30
      timeoutSeconds: 10
      successThreshold: 1
      failureThreshold: 5
    readinessProbe:
      enabled: true
      initialDelaySeconds: 60
      periodSeconds: 30
      timeoutSeconds: 10
      successThreshold: 1
      failureThreshold: 5
    persistence:
      enabled: true
      storageClass: ""
      size: 100Gi
    resources:
      requests:
        cpu: 2
        memory: 4Gi
      limits:
        cpu: 4
        memory: 8Gi
  coordinating:
    replicaCount: 1
    heapSize: 128m
    livenessProbe:
      enabled: true
      initialDelaySeconds: 60
      periodSeconds: 30
      timeoutSeconds: 10
      successThreshold: 1
      failureThreshold: 5
    readinessProbe:
      enabled: true
      initialDelaySeconds: 60
      periodSeconds: 30
      timeoutSeconds: 10
      successThreshold: 1
      failureThreshold: 5
    resources:
      requests:
        cpu: 1
        memory: 2Gi
      limits:
        cpu: 2
        memory: 4Gi
  ingest:
    enabled: true
    replicaCount: 1
    livenessProbe:
      enabled: true
      initialDelaySeconds: 60
      periodSeconds: 30
      timeoutSeconds: 10
      successThreshold: 1
      failureThreshold: 5
    readinessProbe:
      enabled: true
      initialDelaySeconds: 60
      periodSeconds: 30
      timeoutSeconds: 10
      successThreshold: 1
      failureThreshold: 5
    resources:
      requests:
        cpu: 1
        memory: 2Gi
      limits:
        cpu: 2
        memory: 4Gi
  metrics:
    enabled: true
    serviceMonitor:
      enabled: true
  volumePermissions:
    enabled: true

apisix:
  apisix:
    ssl:
      enabled: true
      existingCASecret: "apisix-tls-secret"
      certCAFilename: "tls.crt"
      fallbackSNI: "apisix.default.com"
  tls:
    enabled: true
    autoGenerated: true  # 自动生成证书
    commonName: apisix.example.com

  ingress-controller:
    enabled: true
    config:
      apisix:
        serviceNamespace: zgsm
        serviceName: shenma-apisix-admin
  etcd:
    global:
      storageClass: open-local-lvm
    replicaCount: 1